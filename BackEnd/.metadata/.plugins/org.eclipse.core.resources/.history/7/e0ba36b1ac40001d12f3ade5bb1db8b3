package com.careprovider.controllers;

import java.util.List;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;

import com.careprovider.dtos.ForgotPasswordDTO;
import com.careprovider.dtos.LoginDTO;
import com.careprovider.dtos.LoginResponse;
import com.careprovider.models.Admin;
import com.careprovider.models.CareService;
import com.careprovider.models.CareTaker;
import com.careprovider.models.Customer;
import com.careprovider.services.AdminService;
import com.careprovider.services.CareServiceService;
import com.careprovider.services.CareTakerService;
import com.careprovider.services.CustomerService;

@CrossOrigin
@RestController
@RequestMapping("/api/admin")
public class AdminController {

	@Autowired
	private AdminService adminService;
	@Autowired
	private CareServiceService csservice;
	@Autowired
	private CustomerService cservice;
	@Autowired
	private CareTakerService oservice;

//add service
	@PostMapping("/services") 
	public ResponseEntity<?> saveService(CareService cs, MultipartFile pic) {

		boolean status = csservice.saveService(cs, pic);
		if(status)
		return ResponseEntity.ok("Service saved successfully");
		return ResponseEntity.status(HttpStatus.BAD_REQUEST).body("failed to add service!");
	}
	
//get all services
	@GetMapping("/services") // axios.get('http://localhost:8080/api/admin/services')
	public ResponseEntity<?> listServices() {
		List<CareService> services= csservice.listall();
		if(services!=null)
			return ResponseEntity.ok(csservice.listall());
		else {
			return ResponseEntity.status(HttpStatus.NOT_FOUND).body("No service found");
		}
	}

//delete a service
	@DeleteMapping("/services/{id}") 
	public ResponseEntity<?> deleteService(@PathVariable("id") int id) {
		boolean status = csservice.deleteService(id);
		if(status == true) {
			return ResponseEntity.ok("Service deleted successfully");
		}
		return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).build();
		
	}

//ForgotPassword
	@PostMapping("/reset") 
	public ResponseEntity<?> resetPassword(@RequestBody ForgotPasswordDTO dto) {
		System.out.println(dto);
		if (cservice.validate(dto)) {
			cservice.updatePassword(dto);
			return ResponseEntity.ok("Password updated successfully");
		} else if (oservice.validate(dto)) {
			oservice.updatePassword(dto);
			return ResponseEntity.ok("Password updated successfully");
		} else
			return ResponseEntity.badRequest().body("Invalid details provided");
	}

//Login
	@PostMapping("/validate") 
	public ResponseEntity<?> validateUser(@RequestBody LoginDTO dto) {
		System.out.println(dto);
		Customer cust = cservice.validate(dto);
		CareTaker owner = oservice.validate(dto);
		if (cust != null) {
			return ResponseEntity.ok(new LoginResponse(cust.getId(), cust.getUserid(), cust.getName(), "Customer"));
		}
		if (owner != null) {
			return ResponseEntity.ok(new LoginResponse(owner.getId(), owner.getUserid(), owner.getName(), "CareTaker"));
		}
		return ResponseEntity.badRequest().body("Invalid username or password");
	}

//AdminLogin
	@PostMapping("/avalidate") 
	public ResponseEntity<?> avalidateUser(@RequestBody LoginDTO dto) {
		Admin admin = adminService.validate(dto.getUserid(), dto.getPwd());
		if (admin != null) {
			return ResponseEntity.ok(new LoginResponse(0, admin.getUserid(), admin.getUname(), "Admin"));
		} else {
			return ResponseEntity.badRequest().body("Invalid username or password");
		}
	}
}